package javaapplication1;
import java.lang.*;
import java.io.*;
import java.util.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.security.MessageDigest;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author ABC
 */

public class LOGINPAGE extends javax.swing.JFrame {
    private Object JOptionPane;

    /**
     * Creates new form LOGINPAGE
     */
 
    public LOGINPAGE() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("LOGIN FORM");

        jLabel2.setText("USERNAME");

        jLabel3.setText("PASSWORD");

        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("LOGIN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(272, 272, 272)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(jTextField1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jButton1)
                        .addGap(324, 324, 324)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    String url = "jdbc:derby://localhost:1527/login";
   
    try
    {
               
        Connection conn = DriverManager.getConnection(url,"nbuser","nbuser");
                
        System.out.println("Connected to the database");
      
               
        String username=jTextField1.getText();
        String password=jPasswordField1.getText();
          
      
	MessageDigest md = MessageDigest.getInstance("SHA1");
         System.out.println("Message digest object info: ");
         System.out.println("   Algorithm = "+md.getAlgorithm());
         System.out.println("   Provider = "+md.getProvider());
         System.out.println("   toString = "+md.toString());

         md.update(username.getBytes()); 
      	 byte[] output = md.digest();
         System.out.println();
         System.out.println("SHA1(\""+username+"\") =");
         String h1,h2;
         h1=bytesToHex(output);
         System.out.println(h1);
	
         md.update(password.getBytes()); 
      	 output = md.digest();
         System.out.println();
         System.out.println("SHA1(\""+password+"\") =");
         h2=bytesToHex(output);
         System.out.println(h2);
     
            String sql = "INSERT INTO LOGIN (USER_NAME, PASSWORD) values (?, ?)";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, h1);
            statement.setString(2, h2);
            statement.executeUpdate();
            conn.close();
           /* sta.executeQuery("SELECT * FROM LOGIN");
            ResultSet rs = sta.getResultSet();
            while (rs.next()) {
                System.out.println("Derby says: "+rs.getString("text"));
            }
               */
    } catch (SQLException se)
            {
                System.out.println(se.getMessage());
            } 
    catch(Exception e){   
    }                                        
}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
       String url = "jdbc:derby://localhost:1527/login";
  
    try
    {
               
   Connection conn = DriverManager.getConnection(url,"nbuser","nbuser");
                
   System.out.println("Connected to the database");
                
   String s1=jTextField1.getText();
   System.out.println(s1);
   String s2=jPasswordField1.getText();
   System.out.println(s2);
   
   String username = s1;
   String password = s2;
   
      MessageDigest md = MessageDigest.getInstance("SHA1");
         System.out.println("Message digest object info: ");
         System.out.println("   Algorithm = "+md.getAlgorithm());
         System.out.println("   Provider = "+md.getProvider());
         System.out.println("   toString = "+md.toString());

         md.update(username.getBytes()); 
      	 byte[] output = md.digest();
         System.out.println();
         System.out.println("SHA1(\""+username+"\") =");
         String h1,h2;
         h1=bytesToHex(output);
         System.out.println(h1);
	
         md.update(password.getBytes()); 
      	 output = md.digest();
         System.out.println();
         System.out.println("SHA1(\""+password+"\") =");
         h2=bytesToHex(output);
         System.out.println(h2);
         
            String strSQL = "SELECT USER_NAME, PASSWORD FROM LOGIN where USER_NAME = ? and PASSWORD = ?";
            PreparedStatement stmt = conn.prepareStatement(strSQL);
            stmt.setString(1, h1);
            stmt.setString(2, h2);

            ResultSet myResult = stmt.executeQuery();
            if(myResult.next()){
            System.out.println("Login Succesful! A record with the given user name and password exists");
            } else {
            System.out.println("Login Failed. No records exists with the given user name and password");
            }
                
            conn.close();
        } catch (SQLException se)
            {
                System.out.println(se.getMessage());
            } 
    catch(Exception e){   
    } 
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
                  /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LOGINPAGE().setVisible(true);
               
             
            }
        });
    }

     public static String bytesToHex(byte[] b) {
      char hexDigit[] = {'0', '1', '2', '3', '4', '5', '6', '7',
                         '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
      StringBuffer buf = new StringBuffer();
      for (int j=0; j<b.length; j++) {
         buf.append(hexDigit[(b[j] >> 4) & 0x0f]);
         buf.append(hexDigit[b[j] & 0x0f]);
      }
      return buf.toString();
   }
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
